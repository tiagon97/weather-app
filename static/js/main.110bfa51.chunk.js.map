{"version":3,"sources":["theme/GlobalStyles.js","components/Form/Form.js","components/FetchResult/FetchResult.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","styles","css","Form_templateObject","StyledInput","styled","input","_templateObject2","StyledButton","button","_templateObject3","Form","_ref","submit","value","changeInput","react_default","a","createElement","onSubmit","type","onChange","placeholder","capitalize","s","charAt","toUpperCase","slice","appear","keyframes","FetchResult_templateObject","Wrapper","div","FetchResult_templateObject2","props","shouldAnimate","FetchResult_templateObject3","FetchResult","_props$state","state","temp","wind","cloudiness","pressure","humidity","sunrise","sunset","date","cityName","error","animate","sunriseTime","Date","toLocaleTimeString","sunsetTime","content","concat","Fragment","App","handleInputOnChange","e","_this","setState","target","handleSubmitForm","_callee","API","response","data","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","sent","json","toLocaleString","main","speed","weather","description","sys","t0","console","log","abrupt","alert","stop","this","GlobalStyles","components_Form_Form","components_FetchResult_FetchResult","Component","ReactDOM","render","Root","document","getElementById"],"mappings":"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","file":"static/js/main.110bfa51.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\nbody, *::before, *::after{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nhtml{\r\n    font-size: 62.5%;\r\n}\r\n\r\nbody{\r\n    height: 100vh;\r\n    background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 1.6rem;\r\n    font-family: 'Baloo Bhaina 2', cursive;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst styles = css`\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  margin: 15px;\r\n  font-size: 1.8rem;\r\n  border-radius: 10px;\r\n  border: 0.2rem solid black;\r\n  outline: none;\r\n  margin-top: 60px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  ${styles}\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${styles}\r\n  background-color: transparent;\r\n  color: #5c6bcc;\r\n  border: 0.2rem solid #5c6bcc;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  :hover {\r\n    color: white;\r\n    background: #5c6bcc;\r\n  }\r\n`;\r\nconst Form = ({ submit, value, changeInput }) => {\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={changeInput}\r\n        placeholder=\"Wpisz miasto..\"\r\n      />\r\n      <StyledButton>Wyszukaj miasto</StyledButton>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nconst capitalize = (s) => {\r\n  if (typeof s !== \"string\") return \"\";\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\nconst appear = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    top: 35px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    top: 0;\r\n}\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  background-color: white;\r\n  height: 60vh;\r\n  width: 450px;\r\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.6);\r\n  animation: ${(props) =>\r\n    props.shouldAnimate\r\n      ? css`\r\n          ${appear} 0.5s ease\r\n        `\r\n      : \" \"};\r\n  h1 {\r\n    font-size: 2.4rem;\r\n  }\r\n`;\r\nconst FetchResult = (props) => {\r\n  const {\r\n    temp,\r\n    wind,\r\n    cloudiness,\r\n    pressure,\r\n    humidity,\r\n    sunrise,\r\n    sunset,\r\n    date,\r\n    cityName,\r\n    error,\r\n    animate,\r\n  } = props.state;\r\n\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  let content = null;\r\n  if (!error && cityName) {\r\n    content = (\r\n      <Wrapper shouldAnimate={animate}>\r\n        <h1>{cityName ? `Dane dla miasta ${capitalize(cityName)}` : \"\"}</h1>\r\n        <p>Data: {date}</p>\r\n        <p>Temperatura: {temp}&deg;C</p>\r\n        <p>Zachmurzenie: {cloudiness}</p>\r\n        <p>Wiatr: {wind} m/s</p>\r\n        <p>Ciśnienie: {pressure} hpa</p>\r\n        <p>Wilgotność: {humidity}%</p>\r\n        <p>Wschód słońca o godzinie: {sunriseTime}</p>\r\n        <p>Zachód słońca o godzinie: {sunsetTime}</p>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error\r\n        ? `Brak miasta ${capitalize(cityName)} w bazie lub niepoprawna wartość`\r\n        : content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FetchResult;\r\n","import React, { Component } from \"react\";\nimport GlobalStyles from \"../theme/GlobalStyles\";\nimport Form from \"../components/Form/Form\";\nimport FetchResult from \"../components/FetchResult/FetchResult.js\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    temp: \"\",\n    wind: \"\",\n    cloudiness: \"\",\n    pressure: \"\",\n    humidity: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    date: \"\",\n    cityName: \"\",\n    error: false,\n    animate: true,\n  };\n\n  handleInputOnChange = (e) => {\n    this.setState({\n      value: e.target.value,\n      animate: false,\n    });\n  };\n\n  handleSubmitForm = async (e) => {\n    e.preventDefault();\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=ec07133777be04a36f3647d13eff4d0d&units=metric`;\n    try {\n      const response = await fetch(API);\n      const data = await response.json();\n      const date = new Date().toLocaleString();\n      this.setState({\n        temp: data.main.temp,\n        wind: data.wind.speed,\n        cloudiness: data.weather[0].description,\n        pressure: data.main.pressure,\n        humidity: data.main.humidity,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        date,\n        cityName: this.state.value,\n        error: false,\n        animate: true,\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({\n        error: true,\n        cityName: this.state.value,\n      });\n    }\n    if (this.state.value === \"\") {\n      return alert(\"Proszę podać miasto!\");\n    }\n\n    this.setState({\n      value: \"\",\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <>\n        <GlobalStyles />\n        <Form\n          value={value}\n          changeInput={this.handleInputOnChange}\n          submit={this.handleSubmitForm}\n        />\n        <FetchResult state={this.state} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./views/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}